# v0.7.4

# Base node image
FROM node:20-alpine AS node

RUN apk --no-cache add curl

RUN mkdir -p /app && chown node:node /app
WORKDIR /app

USER node

RUN \
    # Allow mounting of these files, which have no default
    touch .env ; \
    # Create directories for the volumes to inherit the correct permissions
    mkdir -p /app/client/public/images /app/api/logs ; \
    npm config set fetch-retry-maxtimeout 600000 ; \
    npm config set fetch-retries 5 ; \
    npm config set fetch-retry-mintimeout 15000 ;

COPY --chown=node:node package*.json ./
COPY --chown=node:node config ./config
COPY --chown=node:node packages ./packages
COPY --chown=node:node api/package*.json ./api/
COPY --chown=node:node client/package*.json ./client/
RUN npm install --no-audit

# Node API setup
COPY --chown=node:node api ./api
EXPOSE 3080
ENV HOST=0.0.0.0
CMD ["npm", "run", "backend"]

# React client build
COPY --chown=node:node client ./client
RUN NODE_OPTIONS="--max-old-space-size=2048" npm run frontend && \
    npm prune --production && \
    npm cache clean --force

# Optional: for client with nginx routing
# FROM nginx:stable-alpine AS nginx-client
# WORKDIR /usr/share/nginx/html
# COPY --from=node /app/client/dist /usr/share/nginx/html
# COPY client/nginx.conf /etc/nginx/conf.d/default.conf
# ENTRYPOINT ["nginx", "-g", "daemon off;"]
